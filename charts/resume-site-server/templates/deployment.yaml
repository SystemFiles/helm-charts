apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resume-website.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.labels.app }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.labels.app }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ .Values.labels.app }}
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      containers:
        - name: {{ include "resume-website.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: EMAIL_TO
              value: "{{ .Values.image.env.email.to }}"
            - name: EMAIL_FROM
              value: "{{ .Values.image.env.email.from }}"
            - name: CONTENTFUL_BLOG_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.env.secretName }}
                  key: CONTENTFUL_BLOG_TOKEN
            - name: CONTENTFUL_PROJECT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.env.secretName }}
                  key: CONTENTFUL_PROJECT_TOKEN
            - name: SG_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.image.env.secretName }}
                  key: SG_API_TOKEN
          ports:
            - containerPort: {{ .Values.port }}
          resources: 
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}